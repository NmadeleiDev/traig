services:
  server:
    image: traig-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    environment:
      DEV_MODE: ${DEV_MODE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:80
    networks:
      traignetwork:
        aliases:
          - local.traigserver.io
      default:
        aliases:
          - local.traigserver.io
    depends_on:
      worker:
        condition: service_started
    healthcheck:
      test: curl http://local.traigserver.io
      interval: 3s
      timeout: 5s
      retries: 15
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    image: traig-worker
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      DEV_MODE: ${DEV_MODE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      REPOS_DOWNLOAD_PATH: /repos
    volumes:
      - ./loaded_repos:/repos:rw
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      redis:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"

  probe:
    build:
      context: ./probe
    env_file:
      - ./probe/.env
    profiles: ['debug']
#    command: sleep infinity
    depends_on:
      server:
        condition: service_healthy
      worker:
        condition: service_started

  postgres:
    image: postgres
    profiles: ['debug']
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U admin -d public
      interval: 10s
      timeout: 10s
      retries: 5
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    image: redis
    ports:
      - 6379:6379

networks:
  traignetwork:
    ipam:
      config:
        - subnet: ${TRAIGNETWORK_SUBNET}
    internal: true

  default:
    ipam:
      config:
        - subnet: ${DOCKER_NETWORK_SUBNET}
    internal: true
